var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = NumericalTools","category":"page"},{"location":"#NumericalTools","page":"Home","title":"NumericalTools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NumericalTools.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package offers a collection of numerical tools that are useful for daily scientific research. Some of these tools, including geomspace and linspace, were inspired by the popular Python library, numpy.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"All the implemented tools are listed below:","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Tools","page":"Home","title":"Tools","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [NumericalTools]","category":"page"},{"location":"#NumericalTools.geomspace","page":"Home","title":"NumericalTools.geomspace","text":"geomspace(start, stop, num=50; endpoint=true)\n\nGenerate a Vector of geometric sequence,\n\nv_i = a left(fracbaright)^(i - 1)n\n\nfor i = 1 2  N, where N = num, a = start, b = stop, and n = num - 1 if endpoint = true, otherwise n = num.\n\nArguments\n\nstart::Number: The starting value of the sequence.\nstop::Number: The final value of the sequence.\nnum::Integer=50: Number of samples to generate.\n\nKeywords\n\nendpoint::Bool=true: If true, stop is the last sample. Otherwise, it is not included.\n\nExample\n\njulia> geomspace(1, 1e4, 5)\n5-element Vector{Float64}:\n     1.0\n    10.0\n   100.0\n  1000.0\n 10000.0\n\n\n\n\n\n","category":"function"},{"location":"#NumericalTools.linspace","page":"Home","title":"NumericalTools.linspace","text":"linspace(start, stop, num=50; endpoint=true)\n\nGenerate a Vector of arithmetic sequence,\n\nv_i = a + (i - 1) fracb - an\n\nfor i = 1 2  N, where N = num, a = start, b = stop, and n = num - 1 if endpoint = true, otherwise n = num.\n\nArguments\n\nstart::Number: The starting value of the sequence.\nstop::Number: The final value of the sequence.\nnum::Integer=50: Number of samples to generate.\n\nKeywords\n\nendpoint::Bool=true: If true, stop is the last sample. Otherwise, it is not included.\n\nExample\n\njulia> linspace(1.0, 5.0, 5)\n5-element Vector{Float64}:\n 1.0\n 2.0\n 3.0\n 4.0\n 5.0\n\n\n\n\n\n","category":"function"},{"location":"#NumericalTools.loginterpolator-Tuple{AbstractVector, AbstractVector}","page":"Home","title":"NumericalTools.loginterpolator","text":"loginterpolator(x, y; method=\"loglog\", extrapolation_bc=nothing)\n\nLog-log and semi-log interpolator. Return an interpolator function.\n\nArguments\n\nx::AbstractVector: x array.\ny::AbstractVector: y array.\n\nKeywords\n\nmethod=\"loglog\": {\"loglog\", \"xlog\", \"ylog\"}, optional.   Choose which axis to set in log scale.\nextrapolation_bc=nothing: Pass to linear_interpolation.\n\nExample\n\njulia> x = geomspace(1e-1, 10); y = x.^2; itp = loginterpolator(x, y);\n\njulia> itp(1)\n1.0\n\njulia> itp(0.5)\n0.25\n\njulia> itp(5)\n24.999999999999996\n\n\n\n\n\n","category":"method"},{"location":"#NumericalTools.sqrtm1-Tuple{Integer}","page":"Home","title":"NumericalTools.sqrtm1","text":"sqrtm1(x)\nsqrtm1(x, a)\n\nThese functions calculate\n\n    textsqrtm1(x) = sqrt1 + x - 1\n\nfor x  -1, where x is dimensionless, and\n\n    textsqrtm1(x a) = sqrta^2 + x - a\n\nwhere x and a^2 have the same dimension. They are designed to handle situations where the absolute value of x is much smaller than 1 and a, where a is positive.\n\nExample\n\njulia> sqrt(1 + 1e-16) - 1\n0.0\n\njulia> sqrtm1(1e-16)\n5.0e-17\n\njulia> sqrt(1e16^2 + 1) - 1e16\n0.0\n\njulia> sqrtm1(1, 1e16)\n5.0e-17\n\njulia> m = 1; v = 1e-10; p = m*v; T = 1/2*m*v^2\n5.0000000000000005e-21\n\njulia> sqrt(p^2 + m^2) - m\n0.0\n\njulia> sqrtm1(p^2, m)\n5.0000000000000005e-21\n\n\n\n\n\n","category":"method"}]
}
